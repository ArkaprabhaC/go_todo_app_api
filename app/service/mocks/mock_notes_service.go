// Code generated by MockGen. DO NOT EDIT.
// Source: notes_service.go

// Package service_mock is a generated GoMock package.
package service_mock

import (
	reflect "reflect"

	dto "github.com/ArkaprabhaC/go_todo_app_api/app/model/dto"
	gomock "github.com/golang/mock/gomock"
)

// MockNotesService is a mock of NotesService interface.
type MockNotesService struct {
	ctrl     *gomock.Controller
	recorder *MockNotesServiceMockRecorder
}

// MockNotesServiceMockRecorder is the mock recorder for MockNotesService.
type MockNotesServiceMockRecorder struct {
	mock *MockNotesService
}

// NewMockNotesService creates a new mock instance.
func NewMockNotesService(ctrl *gomock.Controller) *MockNotesService {
	mock := &MockNotesService{ctrl: ctrl}
	mock.recorder = &MockNotesServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNotesService) EXPECT() *MockNotesServiceMockRecorder {
	return m.recorder
}

// CreateNote mocks base method.
func (m *MockNotesService) CreateNote(createNoteRequest dto.CreateNoteRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateNote", createNoteRequest)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateNote indicates an expected call of CreateNote.
func (mr *MockNotesServiceMockRecorder) CreateNote(createNoteRequest interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateNote", reflect.TypeOf((*MockNotesService)(nil).CreateNote), createNoteRequest)
}
