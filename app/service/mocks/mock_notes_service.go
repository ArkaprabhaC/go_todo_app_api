// Code generated by MockGen. DO NOT EDIT.
// Source: notes_service.go

// Package service_mock is a generated GoMock package.
package service_mock

import (
	context "context"
	reflect "reflect"

	dto_model "github.com/ArkaprabhaC/go_todo_app_api/app/model/dto"
	gomock "github.com/golang/mock/gomock"
)

// MockNotesService is a mock of NotesService interface.
type MockNotesService struct {
	ctrl     *gomock.Controller
	recorder *MockNotesServiceMockRecorder
}

// MockNotesServiceMockRecorder is the mock recorder for MockNotesService.
type MockNotesServiceMockRecorder struct {
	mock *MockNotesService
}

// NewMockNotesService creates a new mock instance.
func NewMockNotesService(ctrl *gomock.Controller) *MockNotesService {
	mock := &MockNotesService{ctrl: ctrl}
	mock.recorder = &MockNotesServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNotesService) EXPECT() *MockNotesServiceMockRecorder {
	return m.recorder
}

// CreateNote mocks base method.
func (m *MockNotesService) CreateNote(ctx context.Context, createNoteRequest dto_model.CreateNoteRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateNote", ctx, createNoteRequest)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateNote indicates an expected call of CreateNote.
func (mr *MockNotesServiceMockRecorder) CreateNote(ctx, createNoteRequest interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateNote", reflect.TypeOf((*MockNotesService)(nil).CreateNote), ctx, createNoteRequest)
}

// DeleteNote mocks base method.
func (m *MockNotesService) DeleteNote(ctx context.Context, title string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteNote", ctx, title)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteNote indicates an expected call of DeleteNote.
func (mr *MockNotesServiceMockRecorder) DeleteNote(ctx, title interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteNote", reflect.TypeOf((*MockNotesService)(nil).DeleteNote), ctx, title)
}

// GetNotes mocks base method.
func (m *MockNotesService) GetNotes(ctx context.Context) (dto_model.GetNotesResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNotes", ctx)
	ret0, _ := ret[0].(dto_model.GetNotesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetNotes indicates an expected call of GetNotes.
func (mr *MockNotesServiceMockRecorder) GetNotes(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNotes", reflect.TypeOf((*MockNotesService)(nil).GetNotes), ctx)
}
